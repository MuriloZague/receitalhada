generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id_user                      Int         @id @default(autoincrement())
  email                        String      @unique
  name                         String
  username                     String      @unique
  img_url                      String?
  phone                        String
  password                     String
  authenticate_code            String?     @unique
  register_at                  DateTime?
  forgot_password_code         String?     @unique
  forgot_password_expires_at   DateTime?
  forgot_password_attempts     Int         @default(0)
  forgot_password_attempted_at DateTime?
  Recipes                      Recipes[]
  Admins                       Admins[]
  Favorites                    Favorites[]
  Comments                     Comments[]
  Ratings                      Ratings[]
}

model Admins {
  id_admin Int   @id @default(autoincrement())
  user_id  Int
  user     Users @relation(fields: [user_id], references: [id_user])
}

model Recipes {
  id_recipes        Int         @id @default(autoincrement())
  title             String      @db.VarChar(255)
  ingredients       String?
  preparation_method String?
  observation       String?
  user_id           Int
  User              Users       @relation(fields: [user_id], references: [id_user])
  category_id       Int
  Categories        Categories  @relation(fields: [category_id], references: [id_category])
  Favorites         Favorites[]
  Comments          Comments[]
  Ratings           Ratings[]
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
}

model Favorites {
  id_favorite Int     @id @default(autoincrement())
  user_id     Int
  User        Users   @relation(fields: [user_id], references: [id_user])
  recipe_id   Int
  Recipe      Recipes @relation(fields: [recipe_id], references: [id_recipes])
}

model Comments {
  id_comment Int      @id @default(autoincrement())
  content    String
  user_id    Int
  User       Users    @relation(fields: [user_id], references: [id_user])
  recipe_id  Int
  Recipe     Recipes  @relation(fields: [recipe_id], references: [id_recipes])
  createdAt  DateTime @default(now())
}

model Ratings {
  id_rating    Int      @id @default(autoincrement())
  rating_value Float
  user_id      Int
  User         Users    @relation(fields: [user_id], references: [id_user])
  recipe_id    Int
  Recipe       Recipes  @relation(fields: [recipe_id], references: [id_recipes])
  createdAt    DateTime @default(now())
}

model Categories {
  id_category Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  Recipes     Recipes[]
}
